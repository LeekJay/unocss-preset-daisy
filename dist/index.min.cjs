!function(s,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("postcss"),require("autoprefixer"),require("postcss-js"),require("parsel-js"),require("lodash"),require("daisyui/src/theming/index.js"),require("daisyui/dist/utilities.js"),require("daisyui/dist/base.js"),require("daisyui/dist/unstyled.js"),require("daisyui/dist/styled.js"),require("daisyui/dist/utilities-unstyled.js"),require("daisyui/dist/utilities-styled.js"),require("daisyui/src/theming/themes.js"),require("daisyui/src/theming/functions.js"),require("daisyui/src/lib/utility-classes.js")):"function"==typeof define&&define.amd?define(["exports","postcss","autoprefixer","postcss-js","parsel-js","lodash","daisyui/src/theming/index.js","daisyui/dist/utilities.js","daisyui/dist/base.js","daisyui/dist/unstyled.js","daisyui/dist/styled.js","daisyui/dist/utilities-unstyled.js","daisyui/dist/utilities-styled.js","daisyui/src/theming/themes.js","daisyui/src/theming/functions.js","daisyui/src/lib/utility-classes.js"],e):e((s="undefined"!=typeof globalThis?globalThis:s||self).uodule={},s.postcss,s.autoprefixer,s.postcssJs,s.parselJs,s._,s.colors,s.utilities,s.base,s.unstyled,s.styled,s.utilitiesUnstyled,s.utilitiesStyled,s.themes,s.colorFunctions,s.utilityClasses)}(this,(function(s,e,i,t,r,a,n,u,o,d,l,c,y,p,m,h){"use strict";const j=e(i),f=s=>j.process(s,{parser:t.parse}),b=s=>s.replaceAll("--tw-","--un-"),g={styled:!0,themes:!1,base:!0,utils:!0,rtl:!1,darkTheme:"dark"},q=s=>{const e=[],i=s=>{if("atrule"===s.type)for(const e of s.nodes)i(e);else e.push(s)};return i(s),e};s.presetDaisy=(s={})=>{var e;s=Object.assign(Object.assign({},g),s);const i=new Map,t=[],j=[],k=[s.styled?l:d];s.utils&&k.push(u,c,y);for(const s of k.flatMap((s=>f(s).root.nodes))){const a="atrule"===s.type;if(a&&"keyframes"===s.name){t.push(String(s));continue}if(a&&"supports"===s.name){j.push(String(s));continue}if(a&&"supports"!==s.name&&"keyframes"===s.name){console.log(s);continue}const n=q(s)[0],u=n.selectors[0],o=r.tokenize(u),d=o[0];let l="";"class"===d.type?l=u.startsWith(".link-")?"link":u.startsWith(".modal-open")?"modal":d.name:"pseudo-class"===d.type&&"where"===d.name?l=r.tokenize(d.argument)[0].name:['[dir="rtl"]',":root"].includes(d.content)&&(l=o[1].content.includes(".modal-open")?"modal":o[2].name),i.set(l,(null!==(e=i.get(l))&&void 0!==e?e:"")+String(n)+"\n")}const S=[{getCSS:()=>t.join("\n"),layer:"daisy-keyframes"},{getCSS:()=>j.join("\n"),layer:"daisy-supports"}];return s.base&&S.unshift({getCSS:()=>b(f(o).css),layer:"daisy-base"}),m.injectThemes((s=>{S.push({getCSS:()=>f(s).css,layer:"daisy-themes"})}),(e=>"daisyui.themes"===e?s.themes:"daisyui.darkTheme"===e?s.darkTheme:void 0),p),{name:"unocss-preset-daisy",preflights:S,theme:Object.assign({colors:Object.assign(Object.assign({},Object.fromEntries(Object.entries(n).filter((([s])=>!["transparent","current"].includes(s)&&!s.startsWith("base"))).map((([s,e])=>[a.camelCase(s),e])))),{base:Object.fromEntries(Object.entries(n).filter((([s])=>s.startsWith("base"))).map((([s,e])=>[s.replace("base-",""),e])))})},h),rules:[...i].map((([s,e])=>[new RegExp(`^${s}$`),()=>b(e),{layer:s.startsWith("checkbox-")?"daisy-components-post":"daisy-components"}]))}}}));
